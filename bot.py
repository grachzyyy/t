import logging
import random
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile, InputMediaPhoto
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, CallbackContext

# –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = '7269595996:AAFGD4t-0xlqsn03oToJDhl97x_23ohdtj8'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levellevel)s - %(message)s',
    level=logging.INFO
)

logger = logging.getLogger(__name__)

# –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
IMAGE_FOLDER = r'/img'
IMAGE_FOLDERS = r'/images'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –ø–∞–ø–∫–∏
def get_images():
    images = []
    for filename in os.listdir(IMAGE_FOLDERS):
        if filename.endswith(".png") or filename.endswith(".jpg") or filename.endswith(".jpeg"):
            images.append(os.path.join(IMAGE_FOLDERS, filename))
    return images

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ —Å—Ç–∞–≤–∫–∏
def get_random_bet_percentage():
    return random.choice(['15%', '20%', '30%', '25%', '35%'])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: CallbackContext):
    keyboard = [[InlineKeyboardButton("üßø–ü—Ä–æ–π—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º", callback_data='start_algorithm')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –Ω—É–∂–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    image_path = os.path.join(IMAGE_FOLDER, r'photo_2024-06-21_16-04-20.jpg')
    with open(image_path, 'rb') as image_file:
        message = await update.message.reply_photo(
            photo=image_file,
            caption=('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¢—ã —É–∂–µ –≤ —à–∞–≥–µ –æ—Ç —Å–≤–æ–µ–≥–æ –í–´–ò–ì–†–´–®–ê!üòâ\n\n'
                     '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–¥–≤—è–∑–∞—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –∫ –Ω–∞—à–µ–º—É –±–æ—Ç—É –∏ '
                     '–ø–æ–ª—É—á–∞—Ç—å –ë–ï–°–ü–õ–ê–¢–ù–´–ï –≠–ö–°–ö–õ–Æ–ó–ò–í–ù–´–ï –°–ò–ì–ù–ê–õ–´ —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö '
                     '—Ç—ã —Å–º–æ–∂–µ—à—å –¥–µ–ª–∞—Ç—å –∫—Ä—É–ø–Ω—ã–µ –í–´–ò–ì–†–´–®–ò, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å '
                     '–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –¥–µ–π—Å—Ç–≤–∏–π.\n\n'
                     'üîú –ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É "üßø –ü—Ä–æ–π—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º" –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.'),
            reply_markup=reply_markup
        )
        context.user_data['last_message_id'] = message.message_id

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def delete_previous_message(context: CallbackContext, chat_id: int):
    if 'last_message_id' in context.user_data:
        last_message_id = context.user_data['last_message_id']
        await context.bot.delete_message(chat_id=chat_id, message_id=last_message_id)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–π—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º"
async def start_algorithm(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await delete_previous_message(context, query.message.chat_id)
    
    image_path = os.path.join(IMAGE_FOLDER, r'photo_2024-06-21_16-19-47.jpg')
    with open(image_path, 'rb') as image_file:
        message = await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=image_file,
            caption=('–®–∞–≥ 1 - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è.\n\n'
                     'üßø–î–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ù–û–í–´–ô –∞–∫–∫–∞—É–Ω—Ç –ø–æ —Ä–∞–Ω–µ–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–º—É '
                     '–Ω–∞ —ç—Ç–æ–º —Å–∞–π—Ç–µ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∞ —Ç–∞–∫–∂–µ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π.\n\n'
                     '‚ùï–í–ù–ò–ú–ê–ù–ò–ï‚ùï\n'
                     '–ï–°–õ–ò –£ –í–ê–° –£–ñ–ï –ï–°–¢–¨ –ê–ö–ö–ê–£–ù–¢ –ù–ê 1win, –í–´–ô–î–ò–¢–ï –ò–ó –ù–ï–ì–û, –ó–ê–ö–†–û–ô–¢–ï –ë–†–ê–£–ó–ï–†, –¢–û–õ–¨–ö–û –ü–û–¢–û–ú –ü–ï–†–ï–ô–î–ò–¢–ï –ü–û –°–°–´–õ–ö–ï –ò –ü–†–û–ô–î–ò–¢–ï –†–ï–ì–ò–°–¢–†–ê–¶–ò–Æ\n\n'
                     'üîç–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é".'),
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üåê–°–∞–π—Ç –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", url='https://1wqsg.com/?open=register&p=3zvs')],
                [InlineKeyboardButton("üîç–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data='check_registration')]
            ])
        )
        context.user_data['last_message_id'] = message.message_id

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
async def check_registration(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await delete_previous_message(context, query.message.chat_id)
    
    image_path = os.path.join(IMAGE_FOLDER, r'photo_2024-06-21_19-13-37.jpg')
    with open(image_path, 'rb') as image_file:
        message = await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=image_file,
            caption=('–®–∞–≥ 2 - –°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç.\n\n'
                     'üíº –û—Ç –¥–µ–ø–æ–∑–∏—Ç–∞ –∑–∞–≤–∏—Å–∏—Ç –≤–∞—à–∏ LVL (—É—Ä–æ–≤–µ–Ω—å) –≤ –±–æ—Ç–µ, —Å—Ç–∞—Ç—É—Å –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞ —Å–∏–≥–Ω–∞–ª–∞. –ß–µ–º –±–æ–ª—å—à–µ –¥–µ–ø–æ–∑–∏—Ç, —Ç–µ–º –≤—ã—à–µ –≤–∞—à LVL –≤ –±–æ—Ç–µ, –∞ —á–µ–º –≤—ã—à–µ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –≤ –±–æ—Ç–µ, —Ç–µ–º –±–æ–ª—å—à–µ —Å–∏–≥–Ω–∞–ª–æ–≤ —Å –≤—ã—Å–æ–∫–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é —É—Å–ø–µ—Ö–∞ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å.\n\n'
                     'üí≥ –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —Å–≤–æ–π —Å—á–µ—Ç, —Å–¥–µ–ª–∞–≤ –ø–µ—Ä–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç. –≠—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–ê–® –°–ß–ï–¢, –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –¥–ª—è –∏–≥—Ä—ã –∏, —á—Ç–æ —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ, –≤—ã–∏–≥—Ä—ã—à–∞.\n\n'
                     'üîç–ü–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç".'),
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üåê–û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç", url='https://1wqsg.com/?open=register&p=3zvs')],
                [InlineKeyboardButton("üîç–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç", callback_data='check_deposit')]
            ])
        )
        context.user_data['last_message_id'] = message.message_id

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç"
async def check_deposit(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await delete_previous_message(context, query.message.chat_id)
    
    message = await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text='üé∞',
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª", callback_data='get_signal')]
        ])
    )
    context.user_data['jackpot_message_id'] = message.message_id

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª"
async def get_signal(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª"
    if 'jackpot_message_id' in context.user_data:
        await context.bot.delete_message(chat_id=query.message.chat_id, message_id=context.user_data['jackpot_message_id'])
        del context.user_data['jackpot_message_id']

    images = get_images()
    if images:
        random_image = random.choice(images)
        bet_percentage = get_random_bet_percentage()

        caption = (f"üîÆ –°–∏–≥–Ω–∞–ª –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥:\n\n"
                   f"‚è≥ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: 90 —Å–µ–∫—É–Ω–¥\n"
                   f"üí∂ –°—Ç–∞–≤–∏–º: {bet_percentage} –æ—Ç –±–∞–Ω–∫–∞\n\n"
                   f"–ò–≥—Ä–∞—Ç—å —Å—Ç—Ä–æ–≥–æ —Å –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞, –ø–æ–ª—É—á–∏–≤ –ø—Ä–∏ —ç—Ç–æ–º –≤—Å–µ –±–æ–Ω—É—Å—ã –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ üëáüèª")

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å —Å–∏–≥–Ω–∞–ª", "–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É" –∏ "–ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å"
        keyboard = [
            [InlineKeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å —Å–∏–≥–Ω–∞–ª", callback_data='get_signal')],
            [InlineKeyboardButton("–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É", url='https://1wqsg.com/v3/2158/1win-mines?p=054h')],
            [InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å", url='https://telegra.ph/svvvcu-06-21')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ
        if query.message.photo:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Ñ–æ—Ç–æ –∏ –ø–æ–¥–ø–∏—Å—å—é
            media = InputMediaPhoto(media=open(random_image, 'rb'), caption=caption)
            await query.edit_message_media(media, reply_markup=reply_markup)
        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –∏ –ø–æ–¥–ø–∏—Å—å—é
            await context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(random_image, 'rb'), caption=caption, reply_markup=reply_markup)
    else:
        await query.edit_message_text("–í –ø–∞–ø–∫–µ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.", reply_markup=None)

# –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /get_jackpot
async def signal(update: Update, context: CallbackContext):
    # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /get_jackpot
    await update.message.delete()
    
    message = await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text='üé∞',
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª", callback_data='get_signal')]
        ])
    )
    context.user_data['jackpot_message_id'] = message.message_id

def main():
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("signal", signal))
    application.add_handler(CallbackQueryHandler(start_algorithm, pattern='start_algorithm'))
    application.add_handler(CallbackQueryHandler(check_registration, pattern='check_registration'))
    application.add_handler(CallbackQueryHandler(check_deposit, pattern='check_deposit'))
    application.add_handler(CallbackQueryHandler(get_signal, pattern='get_signal'))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
